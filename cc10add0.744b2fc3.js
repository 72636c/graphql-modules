(window.webpackJsonp=window.webpackJsonp||[]).push([[46],{115:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return c})),t.d(n,"metadata",(function(){return p})),t.d(n,"rightToc",(function(){return l})),t.d(n,"default",(function(){return b}));var r=t(3),a=t(8),o=(t(0),t(124)),s=t(129),i=t(130),c={id:"subscriptions",title:"Subscriptions"},p={unversionedId:"advanced/subscriptions",id:"advanced/subscriptions",isDocsHomePage:!1,title:"Subscriptions",description:"Subscription is a third kind of GraphQL operation, next to Query and Mutation. Think of it as an event emitter where events are emitted by your backend and consumed by a GraphQL client - frontend in most scenarios.",source:"@site/docs/advanced/subscriptions.md",slug:"/advanced/subscriptions",permalink:"/docs/advanced/subscriptions",editUrl:"https://github.com/Urigo/graphql-modules/edit/master/website/docs/advanced/subscriptions.md",version:"current",sidebar:"docs",previous:{title:"Scopes",permalink:"/docs/di/scopes"},next:{title:"Middlewares",permalink:"/docs/advanced/middlewares"}},l=[{value:"Setup",id:"setup",children:[]},{value:"Example",id:"example",children:[]}],u={rightToc:l};function b(e){var n=e.components,t=Object(a.a)(e,["components"]);return Object(o.b)("wrapper",Object(r.a)({},u,t,{components:n,mdxType:"MDXLayout"}),Object(o.b)("p",null,"Subscription is a third kind of GraphQL operation, next to Query and Mutation. Think of it as an event emitter where events are emitted by your backend and consumed by a GraphQL client - frontend in most scenarios."),Object(o.b)("p",null,"GraphQL is just a specification and Express GraphQL or Apollo Server are Node implementations of the server-side part of GraphQL. Natural fit for Subscriptions is WebSocket protocol but it could be anything. We're going to focus only on WS and use ",Object(o.b)("a",{parentName:"p",href:"https://github.com/apollographql/subscriptions-transport-ws"},Object(o.b)("inlineCode",{parentName:"a"},"subscriptions-transport-ws"))," package as our transport layer."),Object(o.b)("h2",{id:"setup"},"Setup"),Object(o.b)("p",null,"For Queries and Mutations we use ",Object(o.b)("inlineCode",{parentName:"p"},"createExecution()")," method to create an execution logic, in case of Subscriptions it's very similar. We construct subscription phase with ",Object(o.b)("inlineCode",{parentName:"p"},"createSubscription()")," method and provide it to a GraphQL server."),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-typescript"},"import { createApplication } from 'graphql-modules';\n\nconst application = createApplication({\n  modules: [\n    /* ... */\n  ],\n});\n\nconst subscribe = application.createSubscription();\n")),Object(o.b)("blockquote",null,Object(o.b)("p",{parentName:"blockquote"},Object(o.b)("inlineCode",{parentName:"p"},"createSubscription()")," accepts an object with ",Object(o.b)("inlineCode",{parentName:"p"},"subscribe")," property in case you want to use your own subscription logic. It uses ",Object(o.b)("inlineCode",{parentName:"p"},"subscribe")," from ",Object(o.b)("inlineCode",{parentName:"p"},"graphql")," by default.")),Object(o.b)("p",null,"Why do we need it? GraphQL Modules needs to understand the life cycle of a subscription to avoid memory leaks."),Object(o.b)("h2",{id:"example"},"Example"),Object(o.b)("p",null,"We recommend to use ",Object(o.b)("a",{parentName:"p",href:"https://github.com/apollographql/graphql-subscriptions"},Object(o.b)("inlineCode",{parentName:"a"},"graphql-subscriptions"))," as it provides handful utility functions (filtering for example) and an event emitter."),Object(o.b)("p",null,"Provide ",Object(o.b)("inlineCode",{parentName:"p"},"PubSub")," with an instance as the value so as a singleton service it becomes available across all modules."),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-typescript",metastring:'title="application.ts"',title:'"application.ts"'},"import { createApplication } from 'graphql-modules';\nimport { PubSub } from 'graphql-subscriptions';\nimport { myModule } from './my-module';\n\nconst application = createApplication({\n  modules: [myModule /*...*/],\n  providers: [\n    {\n      provide: PubSub,\n      useValue: new PubSub(),\n    },\n  ],\n});\n")),Object(o.b)("p",null,"Accessing ",Object(o.b)("inlineCode",{parentName:"p"},"PubSub")," in a module can be done both, in a resolve function and ",Object(o.b)("inlineCode",{parentName:"p"},"Messages")," service."),Object(o.b)("p",null,"Take a look at two things here, how ",Object(o.b)("inlineCode",{parentName:"p"},"MESSAGE_ADDED")," event was emitter in ",Object(o.b)("inlineCode",{parentName:"p"},"Messages.send()")," and how ",Object(o.b)("inlineCode",{parentName:"p"},"Subscriptions.messageAdded")," subscribes to events."),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-typescript",metastring:'title="my-module.ts"',title:'"my-module.ts"'},"import { createModule, Injectable, gql } from 'graphql-modules';\nimport { PubSub } from 'graphql-subscriptions';\n\nconst MESSAGE_ADDED = 'MESSAGE_ADDED';\n\nconst messages = [\n  /* ... */\n];\n\n@Injectable()\nclass Messages {\n  constructor(private pubsub: PubSub) {}\n\n  async all() {\n    return messages;\n  }\n\n  async send(body: string) {\n    const message = {\n      id: generateRandomId(),\n      body,\n    };\n\n    messages.push(message);\n\n    this.pubsub.publish(MESSAGE_ADDED, { messageAdded: message });\n\n    return message;\n  }\n}\n\nexport const myModule = createModule({\n  id: 'my-module',\n  providers: [Messages],\n  typeDefs: gql`\n    type Query {\n      messages: [Message!]\n    }\n\n    type Mutation {\n      sendMessage(message: String!): Message!\n    }\n\n    type Subscription {\n      messageAdded: Message\n    }\n\n    type Message {\n      id: ID!\n      body: String!\n    }\n  `,\n  resolvers: {\n    Query: {\n      messages(parent, args, ctx: GraphQLModules.Context) {\n        return ctx.injector.get(Messages).all();\n      },\n    },\n    Mutation: {\n      sendMessage(parent, { message }, ctx: GraphQLModules.Context) {\n        return ctx.injector.get(Messages).send(message);\n      },\n    },\n    Subscription: {\n      messageAdded: {\n        subscribe(root, args, ctx: GraphQLModules.Context) {\n          return ctx.injector.get(PubSub).asyncIterator([MESSAGE_ADDED]);\n        },\n      },\n    },\n  },\n});\n")),Object(o.b)("p",null,"Here are reference implementations of using GraphQL Subscriptions with WebSockets in both, Apollo Server and Express GraphQL."),Object(o.b)(s.a,{defaultValue:"apollo",values:[{label:"Apollo Server",value:"apollo"},{label:"Express GraphQL",value:"express"}],mdxType:"Tabs"},Object(o.b)(i.a,{value:"apollo",mdxType:"TabItem"},Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-typescript",metastring:'title="server.ts"',title:'"server.ts"'},"import 'reflect-metadata';\nimport { ApolloServer } from 'apollo-server';\nimport { application } from './application';\n\nconst schema = application.createSchemaForApollo();\n\nconst server = new ApolloServer({\n  schema,\n});\n\nserver.listen().then(({ url }) => {\n  console.log(`\ud83d\ude80 Server ready at ${url}`);\n});\n"))),Object(o.b)(i.a,{value:"express",mdxType:"TabItem"},Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-typescript",metastring:'title="server.ts"',title:'"server.ts"'},"import 'reflect-metadata';\nimport express from 'express';\nimport graphqlHTTP from 'express-graphql';\nimport { createServer } from 'http';\nimport { SubscriptionServer } from 'subscriptions-transport-ws';\nimport { application } from './application';\n\nconst execute = application.createExecution();\nconst subscribe = application.createSubscription();\nconst schema = application.schema;\n\nconst server = express();\n\nserver.use(\n  '/',\n  graphqlHTTP({\n    schema,\n    customExecuteFn: execute,\n    graphiql: true,\n  })\n);\n\nconst webServer = createServer(app);\n\nwebServer.listen(4000, () => {\n  console.log('\ud83d\ude80 Server ready at http://localhost:4000');\n\n  new SubscriptionServer(\n    {\n      execute,\n      subscribe,\n      schema,\n    },\n    {\n      server: webServer,\n      path: '/',\n    }\n  );\n});\n")))))}b.isMDXComponent=!0},124:function(e,n,t){"use strict";t.d(n,"a",(function(){return u})),t.d(n,"b",(function(){return m}));var r=t(0),a=t.n(r);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function s(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?s(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):s(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var p=a.a.createContext({}),l=function(e){var n=a.a.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},u=function(e){var n=l(e.components);return a.a.createElement(p.Provider,{value:n},e.children)},b={inlineCode:"code",wrapper:function(e){var n=e.children;return a.a.createElement(a.a.Fragment,{},n)}},d=a.a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),u=l(t),d=r,m=u["".concat(s,".").concat(d)]||u[d]||b[d]||o;return t?a.a.createElement(m,i(i({ref:n},p),{},{components:t})):a.a.createElement(m,i({ref:n},p))}));function m(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=t.length,s=new Array(o);s[0]=d;var i={};for(var c in n)hasOwnProperty.call(n,c)&&(i[c]=n[c]);i.originalType=e,i.mdxType="string"==typeof e?e:r,s[1]=i;for(var p=2;p<o;p++)s[p]=t[p];return a.a.createElement.apply(null,s)}return a.a.createElement.apply(null,t)}d.displayName="MDXCreateElement"},125:function(e,n,t){"use strict";function r(e){var n,t,a="";if("string"==typeof e||"number"==typeof e)a+=e;else if("object"==typeof e)if(Array.isArray(e))for(n=0;n<e.length;n++)e[n]&&(t=r(e[n]))&&(a&&(a+=" "),a+=t);else for(n in e)e[n]&&(a&&(a+=" "),a+=n);return a}n.a=function(){for(var e,n,t=0,a="";t<arguments.length;)(e=arguments[t++])&&(n=r(e))&&(a&&(a+=" "),a+=n);return a}},127:function(e,n,t){"use strict";var r=t(0),a=t(128);n.a=function(){var e=Object(r.useContext)(a.a);if(null==e)throw new Error("`useUserPreferencesContext` is used outside of `Layout` Component.");return e}},128:function(e,n,t){"use strict";var r=t(0),a=Object(r.createContext)(void 0);n.a=a},129:function(e,n,t){"use strict";var r=t(0),a=t.n(r),o=t(127),s=t(125),i=t(55),c=t.n(i),p=37,l=39;n.a=function(e){var n=e.lazy,t=e.block,i=e.children,u=e.defaultValue,b=e.values,d=e.groupId,m=e.className,f=Object(o.a)(),g=f.tabGroupChoices,v=f.setTabGroupChoices,h=Object(r.useState)(u),y=h[0],O=h[1];if(null!=d){var j=g[d];null!=j&&j!==y&&b.some((function(e){return e.value===j}))&&O(j)}var S=function(e){O(e),null!=d&&v(d,e)},x=[];return a.a.createElement("div",null,a.a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:Object(s.a)("tabs",{"tabs--block":t},m)},b.map((function(e){var n=e.value,t=e.label;return a.a.createElement("li",{role:"tab",tabIndex:0,"aria-selected":y===n,className:Object(s.a)("tabs__item",c.a.tabItem,{"tabs__item--active":y===n}),key:n,ref:function(e){return x.push(e)},onKeyDown:function(e){!function(e,n,t){switch(t.keyCode){case l:!function(e,n){var t=e.indexOf(n)+1;e[t]?e[t].focus():e[0].focus()}(e,n);break;case p:!function(e,n){var t=e.indexOf(n)-1;e[t]?e[t].focus():e[e.length-1].focus()}(e,n)}}(x,e.target,e)},onFocus:function(){return S(n)},onClick:function(){S(n)}},t)}))),n?Object(r.cloneElement)(i.filter((function(e){return e.props.value===y}))[0],{className:"margin-vert--md"}):a.a.createElement("div",{className:"margin-vert--md"},i.map((function(e,n){return Object(r.cloneElement)(e,{key:n,hidden:e.props.value!==y})}))))}},130:function(e,n,t){"use strict";var r=t(0),a=t.n(r);n.a=function(e){var n=e.children,t=e.hidden,r=e.className;return a.a.createElement("div",{role:"tabpanel",hidden:t,className:r},n)}}}]);