(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{128:function(e,n,t){"use strict";t.d(n,"a",(function(){return p})),t.d(n,"b",(function(){return m}));var r=t(0),o=t.n(r);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function c(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?c(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):c(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var l=o.a.createContext({}),u=function(e){var n=o.a.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},p=function(e){var n=u(e.components);return o.a.createElement(l.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return o.a.createElement(o.a.Fragment,{},n)}},b=o.a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,a=e.originalType,c=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),p=u(t),b=r,m=p["".concat(c,".").concat(b)]||p[b]||d[b]||a;return t?o.a.createElement(m,i(i({ref:n},l),{},{components:t})):o.a.createElement(m,i({ref:n},l))}));function m(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var a=t.length,c=new Array(a);c[0]=b;var i={};for(var s in n)hasOwnProperty.call(n,s)&&(i[s]=n[s]);i.originalType=e,i.mdxType="string"==typeof e?e:r,c[1]=i;for(var l=2;l<a;l++)c[l]=t[l];return o.a.createElement.apply(null,c)}return o.a.createElement.apply(null,t)}b.displayName="MDXCreateElement"},129:function(e,n,t){"use strict";function r(e){var n,t,o="";if("string"==typeof e||"number"==typeof e)o+=e;else if("object"==typeof e)if(Array.isArray(e))for(n=0;n<e.length;n++)e[n]&&(t=r(e[n]))&&(o&&(o+=" "),o+=t);else for(n in e)e[n]&&(o&&(o+=" "),o+=n);return o}n.a=function(){for(var e,n,t=0,o="";t<arguments.length;)(e=arguments[t++])&&(n=r(e))&&(o&&(o+=" "),o+=n);return o}},131:function(e,n,t){"use strict";var r=t(0),o=t(132);n.a=function(){var e=Object(r.useContext)(o.a);if(null==e)throw new Error("`useUserPreferencesContext` is used outside of `Layout` Component.");return e}},132:function(e,n,t){"use strict";var r=t(0),o=Object(r.createContext)(void 0);n.a=o},134:function(e,n,t){"use strict";var r=t(0),o=t.n(r),a=t(131),c=t(129),i=t(55),s=t.n(i),l=37,u=39;n.a=function(e){var n=e.lazy,t=e.block,i=e.children,p=e.defaultValue,d=e.values,b=e.groupId,m=e.className,f=Object(a.a)(),v=f.tabGroupChoices,O=f.setTabGroupChoices,y=Object(r.useState)(p),j=y[0],h=y[1];if(null!=b){var g=v[b];null!=g&&g!==j&&d.some((function(e){return e.value===g}))&&h(g)}var w=function(e){h(e),null!=b&&O(b,e)},N=[];return o.a.createElement("div",null,o.a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:Object(c.a)("tabs",{"tabs--block":t},m)},d.map((function(e){var n=e.value,t=e.label;return o.a.createElement("li",{role:"tab",tabIndex:0,"aria-selected":j===n,className:Object(c.a)("tabs__item",s.a.tabItem,{"tabs__item--active":j===n}),key:n,ref:function(e){return N.push(e)},onKeyDown:function(e){!function(e,n,t){switch(t.keyCode){case u:!function(e,n){var t=e.indexOf(n)+1;e[t]?e[t].focus():e[0].focus()}(e,n);break;case l:!function(e,n){var t=e.indexOf(n)-1;e[t]?e[t].focus():e[e.length-1].focus()}(e,n)}}(N,e.target,e)},onFocus:function(){return w(n)},onClick:function(){w(n)}},t)}))),n?Object(r.cloneElement)(i.filter((function(e){return e.props.value===j}))[0],{className:"margin-vert--md"}):o.a.createElement("div",{className:"margin-vert--md"},i.map((function(e,n){return Object(r.cloneElement)(e,{key:n,hidden:e.props.value!==j})}))))}},135:function(e,n,t){"use strict";var r=t(0),o=t.n(r);n.a=function(e){var n=e.children,t=e.hidden,r=e.className;return o.a.createElement("div",{role:"tabpanel",hidden:t,className:r},n)}},97:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return s})),t.d(n,"metadata",(function(){return l})),t.d(n,"rightToc",(function(){return u})),t.d(n,"default",(function(){return d}));var r=t(3),o=t(8),a=(t(0),t(128)),c=t(134),i=t(135),s={id:"scopes",title:"Scopes"},l={unversionedId:"di/scopes",id:"di/scopes",isDocsHomePage:!1,title:"Scopes",description:"Scope defines a life cycle of Providers and InjectionToken. There are two kinds of scopes, Singleton and Operation, former is used by default.",source:"@site/docs/di/scopes.md",slug:"/di/scopes",permalink:"/docs/di/scopes",editUrl:"https://github.com/Urigo/graphql-modules/edit/master/website/docs/di/scopes.md",version:"current",sidebar:"docs",previous:{title:"Providers and Tokens",permalink:"/docs/di/providers"},next:{title:"Subscriptions",permalink:"/docs/advanced/subscriptions"}},u=[{value:"Singleton",id:"singleton",children:[]},{value:"Operation",id:"operation",children:[]},{value:"Using both",id:"using-both",children:[]}],p={rightToc:u};function d(e){var n=e.components,t=Object(o.a)(e,["components"]);return Object(a.b)("wrapper",Object(r.a)({},p,t,{components:n,mdxType:"MDXLayout"}),Object(a.b)("p",null,"Scope defines a life cycle of ",Object(a.b)("inlineCode",{parentName:"p"},"Providers")," and ",Object(a.b)("inlineCode",{parentName:"p"},"InjectionToken"),". There are two kinds of scopes, ",Object(a.b)("strong",{parentName:"p"},"Singleton")," and ",Object(a.b)("strong",{parentName:"p"},"Operation"),", former is used by default."),Object(a.b)("h2",{id:"singleton"},"Singleton"),Object(a.b)("p",null,"As mentioned before, ",Object(a.b)("inlineCode",{parentName:"p"},"Singleton")," scope is the default choice in GraphQL Modules. Every Service and Token is created even before the first incoming GraphQL operation and never gets destroyed (only when Node process is terminated)."),Object(a.b)("blockquote",null,Object(a.b)("p",{parentName:"blockquote"},"We decided to make it the default choice, because of performance related reasons. In most cases, there's no need to instantiate classes on every new request and dispose them later on.")),Object(a.b)(c.a,{defaultValue:"service",values:[{label:"Service",value:"service"},{label:"Factory Provider",value:"factory"}],mdxType:"Tabs"},Object(a.b)(i.a,{value:"service",mdxType:"TabItem"},Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-typescript"},"import { Injectable, createModule } from 'graphql-modules';\n\n@Injectable()\nclass Data {}\n\nexport const myModule = createModule({\n  id: 'my-module',\n  providers: [Data],\n  /* ... */\n});\n"))),Object(a.b)(i.a,{value:"factory",mdxType:"TabItem"},Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-typescript"},"import { Injectable, InjectionToken, createModule } from 'graphql-modules';\n\nconst Env = new InjectionToken<'production' | 'development'>('environment');\n\nexport const myModule = createModule({\n  id: 'my-module',\n  providers: [\n    {\n      provide: Env,\n      useFactory() {\n        return process.env.NODE_ENV === 'production'\n          ? 'production'\n          : 'development';\n      },\n    },\n  ],\n  /* ... */\n});\n")))),Object(a.b)("h2",{id:"operation"},"Operation"),Object(a.b)("p",null,"All classes and values are created within the context of execution, meaning every incoming GraphQL Operation."),Object(a.b)("blockquote",null,Object(a.b)("p",{parentName:"blockquote"},"Because of performance related reasons, we recommend to use Singletons whenever possible.")),Object(a.b)("p",null,"The ",Object(a.b)("inlineCode",{parentName:"p"},"Data")," class defined below gets instantiated for every new GraphQL operation and disposed once the operation is resolved. Operation Scope doesn't overlap for incoming requests, so for 3 requests at a time, 3 instances of ",Object(a.b)("inlineCode",{parentName:"p"},"Data")," are created, one per each request."),Object(a.b)("p",null,"To improve the performance a bit, GraphQL Modules instantiate services on demand. When ",Object(a.b)("inlineCode",{parentName:"p"},"Data")," is not called anywhere directly or indirectly by resolvers, the service is not created."),Object(a.b)("p",null,"All services and tokens are destroyed right after GraphQL execution phase."),Object(a.b)(c.a,{defaultValue:"service",values:[{label:"Service",value:"service"},{label:"Factory Provider",value:"factory"}],mdxType:"Tabs"},Object(a.b)(i.a,{value:"service",mdxType:"TabItem"},Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-typescript"},"import { Injectable, Scope, createModule } from 'graphql-modules';\n\n@Injectable({\n  scope: Scope.Operation, // <- here\n})\nclass Data {}\n\nexport const myModule = createModule({\n  id: 'my-module',\n  providers: [Data],\n  /* ... */\n});\n"))),Object(a.b)(i.a,{value:"factory",mdxType:"TabItem"},Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-typescript"},"import {\n  Injectable,\n  Scope,\n  InjectionToken,\n  createModule,\n} from 'graphql-modules';\n\nconst Env = new InjectionToken<'production' | 'development'>('environment');\n\nexport const myModule = createModule({\n  id: 'my-module',\n  providers: [\n    {\n      provide: Env,\n      scope: Scope.Operation, // <- here\n      useFactory() {\n        return process.env.NODE_ENV === 'production'\n          ? 'production'\n          : 'development';\n      },\n    },\n  ],\n  /* ... */\n});\n")))),Object(a.b)("h2",{id:"using-both"},"Using both"),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Directly")," accessing a Singleton service in an Operation scoped service is possible, but not the other way around."),Object(a.b)("p",null,"With ",Object(a.b)("a",{parentName:"p",href:"/docs/advanced/execution-context"},Object(a.b)("inlineCode",{parentName:"a"},"@ExecutionContext"))," decorator, your Singleton services will be able to ",Object(a.b)("strong",{parentName:"p"},"indirectly")," access Operation scoped Tokens and Services."))}d.isMDXComponent=!0}}]);