(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{128:function(e,r,t){"use strict";t.d(r,"a",(function(){return u})),t.d(r,"b",(function(){return d}));var n=t(0),o=t.n(n);function a(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function p(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function c(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?p(Object(t),!0).forEach((function(r){a(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):p(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function i(e,r){if(null==e)return{};var t,n,o=function(e,r){if(null==e)return{};var t,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||(o[t]=e[t]);return o}(e,r);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var l=o.a.createContext({}),s=function(e){var r=o.a.useContext(l),t=r;return e&&(t="function"==typeof e?e(r):c(c({},r),e)),t},u=function(e){var r=s(e.components);return o.a.createElement(l.Provider,{value:r},e.children)},m={inlineCode:"code",wrapper:function(e){var r=e.children;return o.a.createElement(o.a.Fragment,{},r)}},b=o.a.forwardRef((function(e,r){var t=e.components,n=e.mdxType,a=e.originalType,p=e.parentName,l=i(e,["components","mdxType","originalType","parentName"]),u=s(t),b=n,d=u["".concat(p,".").concat(b)]||u[b]||m[b]||a;return t?o.a.createElement(d,c(c({ref:r},l),{},{components:t})):o.a.createElement(d,c({ref:r},l))}));function d(e,r){var t=arguments,n=r&&r.mdxType;if("string"==typeof e||n){var a=t.length,p=new Array(a);p[0]=b;var c={};for(var i in r)hasOwnProperty.call(r,i)&&(c[i]=r[i]);c.originalType=e,c.mdxType="string"==typeof e?e:n,p[1]=c;for(var l=2;l<a;l++)p[l]=t[l];return o.a.createElement.apply(null,p)}return o.a.createElement.apply(null,t)}b.displayName="MDXCreateElement"},88:function(e,r,t){"use strict";t.r(r),t.d(r,"frontMatter",(function(){return p})),t.d(r,"metadata",(function(){return c})),t.d(r,"rightToc",(function(){return i})),t.d(r,"default",(function(){return s}));var n=t(3),o=t(8),a=(t(0),t(128)),p={id:"implement-server",title:"Implement Your Server",sidebar_label:"Implement Server"},c={unversionedId:"introduction/implement-server",id:"version-legacy/introduction/implement-server",isDocsHomePage:!1,title:"Implement Your Server",description:"To get started, add express and express-graphql to your app:",source:"@site/versioned_docs/version-legacy/introduction/implement-server.md",slug:"/introduction/implement-server",permalink:"/docs/legacy/introduction/implement-server",editUrl:"https://github.com/Urigo/graphql-modules/edit/master/website/versioned_docs/version-legacy/introduction/implement-server.md",version:"legacy",sidebar_label:"Implement Server",sidebar:"version-legacy/docs",previous:{title:"Your First Module",permalink:"/docs/legacy/introduction/your-first-module"},next:{title:"Implement Your Resolvers",permalink:"/docs/legacy/introduction/implement-resolvers"}},i=[],l={rightToc:i};function s(e){var r=e.components,t=Object(o.a)(e,["components"]);return Object(a.b)("wrapper",Object(n.a)({},l,t,{components:r,mdxType:"MDXLayout"}),Object(a.b)("p",null,"To get started, add ",Object(a.b)("inlineCode",{parentName:"p"},"express")," and ",Object(a.b)("inlineCode",{parentName:"p"},"express-graphql")," to your app:"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-bash"},"yarn add express express-graphql\n")),Object(a.b)("p",null,"Then,"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-typescript"},"import { GraphQLModule } from '@graphql-modules/core';\nimport * as express from 'express';\nimport * as graphqlHTTP from 'express-graphql';\n\nconst { schema } = new GraphQLModule({\n  /*...*/\n});\n\nconst app = express();\n\napp.use(\n  '/graphql',\n  graphqlHTTP({\n    schema,\n    graphiql: true,\n  })\n);\n\napp.listen(4000);\n")),Object(a.b)("blockquote",null,Object(a.b)("p",{parentName:"blockquote"},"To test your server, run ",Object(a.b)("inlineCode",{parentName:"p"},"ts-node index.ts")," and try to open ",Object(a.b)("inlineCode",{parentName:"p"},"http://localhost:4000/"),". See the ",Object(a.b)("strong",{parentName:"p"},Object(a.b)("a",{parentName:"strong",href:"https://github.com/graphql/graphiql"},"GraphiQL"))," UI.")),Object(a.b)("blockquote",null,Object(a.b)("p",{parentName:"blockquote"},"If you want to use ",Object(a.b)("strong",{parentName:"p"},Object(a.b)("a",{parentName:"strong",href:"https://www.apollographql.com/docs/apollo-server/getting-started.html"},"Apollo-Server")),", check the ",Object(a.b)("strong",{parentName:"p"},Object(a.b)("a",{parentName:"strong",href:"/docs/legacy/recipes/apollo-server"},"Integrate with Apollo Server"))," section.")))}s.isMDXComponent=!0}}]);