"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[8458],{4137:function(e,n,t){t.d(n,{Zo:function(){return p},kt:function(){return f}});var o=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,o,r=function(e,n){if(null==e)return{};var t,o,r={},i=Object.keys(e);for(o=0;o<i.length;o++)t=i[o],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++)t=i[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var u=o.createContext({}),l=function(e){var n=o.useContext(u),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},p=function(e){var n=l(e.components);return o.createElement(u.Provider,{value:n},e.children)},s={inlineCode:"code",wrapper:function(e){var n=e.children;return o.createElement(o.Fragment,{},n)}},d=o.forwardRef((function(e,n){var t=e.components,r=e.mdxType,i=e.originalType,u=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),d=l(t),f=r,m=d["".concat(u,".").concat(f)]||d[f]||s[f]||i;return t?o.createElement(m,a(a({ref:n},p),{},{components:t})):o.createElement(m,a({ref:n},p))}));function f(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var i=t.length,a=new Array(i);a[0]=d;var c={};for(var u in n)hasOwnProperty.call(n,u)&&(c[u]=n[u]);c.originalType=e,c.mdxType="string"==typeof e?e:r,a[1]=c;for(var l=2;l<i;l++)a[l]=t[l];return o.createElement.apply(null,a)}return o.createElement.apply(null,t)}d.displayName="MDXCreateElement"},4394:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return c},contentTitle:function(){return u},metadata:function(){return l},toc:function(){return p},default:function(){return d}});var o=t(7462),r=t(3366),i=(t(7294),t(4137)),a=["components"],c={id:"configuration",title:"Module Configuration",sidebar_label:"Module Configuration"},u=void 0,l={unversionedId:"introduction/configuration",id:"version-legacy/introduction/configuration",isDocsHomePage:!1,title:"Module Configuration",description:"Each module can have its own configuration, and you can specify it in your GraphQLModule.",source:"@site/versioned_docs/version-legacy/introduction/configuration.md",sourceDirName:"introduction",slug:"/introduction/configuration",permalink:"/docs/legacy/introduction/configuration",editUrl:"https://github.com/Urigo/graphql-modules/edit/master/website/versioned_docs/version-legacy/introduction/configuration.md",version:"legacy",frontMatter:{id:"configuration",title:"Module Configuration",sidebar_label:"Module Configuration"},sidebar:"version-legacy/docs",previous:{title:"Dependency Injection",permalink:"/docs/legacy/introduction/dependency-injection"},next:{title:"Context",permalink:"/docs/legacy/introduction/context"}},p=[],s={toc:p};function d(e){var n=e.components,t=(0,r.Z)(e,a);return(0,i.kt)("wrapper",(0,o.Z)({},s,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Each module can have its own configuration, and you can specify it in your ",(0,i.kt)("inlineCode",{parentName:"p"},"GraphQLModule"),"."),(0,i.kt)("p",null,"Start by creating a TypeScript interface that specifies the structure of your configuration object, and pass it as the first generic argument to your ",(0,i.kt)("inlineCode",{parentName:"p"},"GraphQLModule"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript"},"import { GraphQLModule } from '@graphql-modules/core';\nimport { MyProvider } from './my-provider.ts';\n\nexport interface MyModuleConfig {\n  secretKey: string;\n  remoteEndpoint: string;\n  someDbInstance: SomeDBInstance;\n}\n\n// You can access the config object like below inside the module declaration\nexport const MyModule = new GraphQLModule<MyModuleConfig>({\n  providers: ({ config: { someDbInstance } }) => [\n    MyProvider,\n    {\n      provide: SomeDbInstance,\n      useValue: someDbInstance,\n    },\n  ],\n});\n")),(0,i.kt)("p",null,"To provide the configuration values, add ",(0,i.kt)("inlineCode",{parentName:"p"},".forRoot")," to your module when you load it:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript"},"import { GraphQLModule } from '@graphql-modules/core';\nimport { MyModule } from './modules/my-module';\n\nconst AnotherModule = new GraphQLModule({\n  imports: [\n    MyModule.forRoot({\n      secretKey: '123',\n      remoteEndpoint: 'http://my-other-service.com',\n    }),\n  ],\n});\n")),(0,i.kt)("p",null,"To get access to your configuration in your ",(0,i.kt)("inlineCode",{parentName:"p"},"Provider"),"s, inject ",(0,i.kt)("inlineCode",{parentName:"p"},"MyModuleConfig"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript"},"import { ModuleConfig } from '@graphql-modules/core';\nimport { Inject, Injectable } from '@graphql-modules/di';\nimport { MyModule } from './my-module.ts';\n\n@Injectable()\nexport class MyProvider {\n  constructor(@Inject(ModuleConfig) private config: MyModuleConfig) {\n    ...\n  }\n\n  async fetchData() {\n    return fetch({\n      url: this.config.remoteEndpoint.\n      body: {\n        key: this.config.secretKey,\n      }\n    });\n  }\n}\n")))}d.isMDXComponent=!0}}]);