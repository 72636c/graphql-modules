(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[2854],{3905:function(e,r,t){"use strict";t.d(r,{Zo:function(){return c},kt:function(){return d}});var n=t(7294);function o(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function a(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function p(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?a(Object(t),!0).forEach((function(r){o(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function l(e,r){if(null==e)return{};var t,n,o=function(e,r){if(null==e)return{};var t,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||(o[t]=e[t]);return o}(e,r);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var i=n.createContext({}),s=function(e){var r=n.useContext(i),t=r;return e&&(t="function"==typeof e?e(r):p(p({},r),e)),t},c=function(e){var r=s(e.components);return n.createElement(i.Provider,{value:r},e.children)},u={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},m=n.forwardRef((function(e,r){var t=e.components,o=e.mdxType,a=e.originalType,i=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),m=s(t),d=o,f=m["".concat(i,".").concat(d)]||m[d]||u[d]||a;return t?n.createElement(f,p(p({ref:r},c),{},{components:t})):n.createElement(f,p({ref:r},c))}));function d(e,r){var t=arguments,o=r&&r.mdxType;if("string"==typeof e||o){var a=t.length,p=new Array(a);p[0]=m;var l={};for(var i in r)hasOwnProperty.call(r,i)&&(l[i]=r[i]);l.originalType=e,l.mdxType="string"==typeof e?e:o,p[1]=l;for(var s=2;s<a;s++)p[s]=t[s];return n.createElement.apply(null,p)}return n.createElement.apply(null,t)}m.displayName="MDXCreateElement"},2613:function(e,r,t){"use strict";t.r(r),t.d(r,{frontMatter:function(){return p},metadata:function(){return l},toc:function(){return i},default:function(){return c}});var n=t(2122),o=t(9756),a=(t(7294),t(3905)),p={id:"implement-server",title:"Implement Your Server",sidebar_label:"Implement Server"},l={unversionedId:"introduction/implement-server",id:"version-legacy/introduction/implement-server",isDocsHomePage:!1,title:"Implement Your Server",description:"To get started, add express and express-graphql to your app:",source:"@site/versioned_docs/version-legacy/introduction/implement-server.md",sourceDirName:"introduction",slug:"/introduction/implement-server",permalink:"/docs/legacy/introduction/implement-server",editUrl:"https://github.com/Urigo/graphql-modules/edit/master/website/versioned_docs/version-legacy/introduction/implement-server.md",version:"legacy",sidebar_label:"Implement Server",frontMatter:{id:"implement-server",title:"Implement Your Server",sidebar_label:"Implement Server"},sidebar:"version-legacy/docs",previous:{title:"Your First Module",permalink:"/docs/legacy/introduction/your-first-module"},next:{title:"Implement Your Resolvers",permalink:"/docs/legacy/introduction/implement-resolvers"}},i=[],s={toc:i};function c(e){var r=e.components,t=(0,o.Z)(e,["components"]);return(0,a.kt)("wrapper",(0,n.Z)({},s,t,{components:r,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"To get started, add ",(0,a.kt)("inlineCode",{parentName:"p"},"express")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"express-graphql")," to your app:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"yarn add express express-graphql\n")),(0,a.kt)("p",null,"Then,"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"import { GraphQLModule } from '@graphql-modules/core';\nimport * as express from 'express';\nimport * as graphqlHTTP from 'express-graphql';\n\nconst { schema } = new GraphQLModule({\n  /*...*/\n});\n\nconst app = express();\n\napp.use(\n  '/graphql',\n  graphqlHTTP({\n    schema,\n    graphiql: true,\n  })\n);\n\napp.listen(4000);\n")),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"To test your server, run ",(0,a.kt)("inlineCode",{parentName:"p"},"ts-node index.ts")," and try to open ",(0,a.kt)("inlineCode",{parentName:"p"},"http://localhost:4000/"),". See the ",(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("a",{parentName:"strong",href:"https://github.com/graphql/graphiql"},"GraphiQL"))," UI.")),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"If you want to use ",(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("a",{parentName:"strong",href:"https://www.apollographql.com/docs/apollo-server/getting-started.html"},"Apollo-Server")),", check the ",(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("a",{parentName:"strong",href:"/docs/legacy/recipes/apollo-server"},"Integrate with Apollo Server"))," section.")))}c.isMDXComponent=!0}}]);