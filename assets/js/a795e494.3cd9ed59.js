"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[7202],{4137:function(e,n,r){r.d(n,{Zo:function(){return c},kt:function(){return m}});var t=r(7294);function o(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function i(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function a(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?i(Object(r),!0).forEach((function(n){o(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function l(e,n){if(null==e)return{};var r,t,o=function(e,n){if(null==e)return{};var r,t,o={},i=Object.keys(e);for(t=0;t<i.length;t++)r=i[t],n.indexOf(r)>=0||(o[r]=e[r]);return o}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(t=0;t<i.length;t++)r=i[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var d=t.createContext({}),s=function(e){var n=t.useContext(d),r=n;return e&&(r="function"==typeof e?e(n):a(a({},n),e)),r},c=function(e){var n=s(e.components);return t.createElement(d.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},u=t.forwardRef((function(e,n){var r=e.components,o=e.mdxType,i=e.originalType,d=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=s(r),m=o,f=u["".concat(d,".").concat(m)]||u[m]||p[m]||i;return r?t.createElement(f,a(a({ref:n},c),{},{components:r})):t.createElement(f,a({ref:n},c))}));function m(e,n){var r=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var i=r.length,a=new Array(i);a[0]=u;var l={};for(var d in n)hasOwnProperty.call(n,d)&&(l[d]=n[d]);l.originalType=e,l.mdxType="string"==typeof e?e:o,a[1]=l;for(var s=2;s<i;s++)a[s]=r[s];return t.createElement.apply(null,a)}return t.createElement.apply(null,r)}u.displayName="MDXCreateElement"},2307:function(e,n,r){r.r(n),r.d(n,{frontMatter:function(){return l},contentTitle:function(){return d},metadata:function(){return s},toc:function(){return c},default:function(){return u}});var t=r(7462),o=r(3366),i=(r(7294),r(4137)),a=["components"],l={id:"dependencies",title:"Dependencies Between Modules",sidebar_label:"Dependencies Between Modules"},d=void 0,s={unversionedId:"introduction/dependencies",id:"version-legacy/introduction/dependencies",isDocsHomePage:!1,title:"Dependencies Between Modules",description:"With GraphQL Modules you can create dependencies between modules.",source:"@site/versioned_docs/version-legacy/introduction/dependencies.md",sourceDirName:"introduction",slug:"/introduction/dependencies",permalink:"/docs/legacy/introduction/dependencies",editUrl:"https://github.com/Urigo/graphql-modules/edit/master/website/versioned_docs/version-legacy/introduction/dependencies.md",version:"legacy",frontMatter:{id:"dependencies",title:"Dependencies Between Modules",sidebar_label:"Dependencies Between Modules"},sidebar:"version-legacy/docs",previous:{title:"Understanding Session",permalink:"/docs/legacy/introduction/understanding-session"},next:{title:"Dependency Injection",permalink:"/docs/legacy/introduction/dependency-injection"}},c=[{value:"Exclusions from Schema",id:"exclusions-from-schema",children:[]}],p={toc:c};function u(e){var n=e.components,r=(0,o.Z)(e,a);return(0,i.kt)("wrapper",(0,t.Z)({},p,r,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"With GraphQL Modules you can create dependencies between modules.\nThey will affect the initialization order, and the order in which ",(0,i.kt)("inlineCode",{parentName:"p"},"Provider"),"s are loaded."),(0,i.kt)("p",null,"To add a dependency to another module, start by adding the ",(0,i.kt)("inlineCode",{parentName:"p"},"imports")," array to your module declaration."),(0,i.kt)("p",null,"To see it in action, let's add a new module called ",(0,i.kt)("inlineCode",{parentName:"p"},"my-second-module"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript"},"import { GraphQLModule } from '@graphql-modules/core';\nimport * as typeDefs from './schema.graphql';\nimport resolvers from './resolvers';\n\nexport const MySecondModule = new GraphQLModule({\n  typeDefs,\n  resolvers,\n});\n")),(0,i.kt)("p",null,"Now, we can add a direct dependency by adding to our first module:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript"},"import { GraphQLModule } from '@graphql-modules/core';\nimport * as typeDefs from './schema.graphql';\nimport resolvers from './resolvers';\nimport { UserProvider } from './user.provider';\nimport { MySecondModule } from './my-second-module';\n\nexport const MyModule = new GraphQLModule({\n  typeDefs,\n  resolvers,\n  providers: [UserProvider],\n  imports: [MySecondModule],\n});\n")),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"This is useful when you just want to automatically guarantee that your module is initialized after another module.")),(0,i.kt)("p",null,"Now GraphQL Modules will make sure to load and initialize ",(0,i.kt)("inlineCode",{parentName:"p"},"MySecondModule")," before ",(0,i.kt)("inlineCode",{parentName:"p"},"MyModule"),"."),(0,i.kt)("h2",{id:"exclusions-from-schema"},"Exclusions from Schema"),(0,i.kt)("p",null,"You can exclude some types or only some fields from a specific type while importing a module's schema into another by using ",(0,i.kt)("inlineCode",{parentName:"p"},"withExclusionsFromSchema")," like below;"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript"},"import { GraphQLModule } from '@graphql-modules/core';\nimport * as typeDefs from './schema.graphql';\nimport resolvers from './resolvers';\nimport { UserProvider } from './user.provider';\nimport { MySecondModule } from './my-second-module';\n\nexport const MyModule = new GraphQLModule({\n  typeDefs,\n  resolvers,\n  providers: [UserProvider],\n  imports: [\n    MySecondModule.withExclusionsFromSchema(['Query.unwanted', 'Unwanted.*']),\n  ],\n});\n")),(0,i.kt)("p",null,"Now ",(0,i.kt)("inlineCode",{parentName:"p"},"MyModule")," does not import from ",(0,i.kt)("inlineCode",{parentName:"p"},"MySecondModule")," both ",(0,i.kt)("inlineCode",{parentName:"p"},"typeDefs")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"resolvers")," of the specified unwanted fields."))}u.isMDXComponent=!0}}]);