"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[9852],{4137:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return m}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=r.createContext({}),s=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},u=function(e){var t=s(e.components);return r.createElement(p.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,p=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),d=s(n),m=a,h=d["".concat(p,".").concat(m)]||d[m]||c[m]||o;return n?r.createElement(h,l(l({ref:t},u),{},{components:n})):r.createElement(h,l({ref:t},u))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,l=new Array(o);l[0]=d;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i.mdxType="string"==typeof e?e:a,l[1]=i;for(var s=2;s<o;s++)l[s]=n[s];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},9647:function(e,t,n){var r=n(7294);t.Z=function(e){var t=e.children,n=e.hidden,a=e.className;return r.createElement("div",{role:"tabpanel",hidden:n,className:a},t)}},7225:function(e,t,n){n.d(t,{Z:function(){return d}});var r=n(7462),a=n(7294),o=n(1048),l=n(2713);var i=function(){var e=(0,a.useContext)(l.Z);if(null==e)throw new Error('"useUserPreferencesContext" is used outside of "Layout" component.');return e},p=n(3309),s=n(6010),u="tabItem_1uMI";function c(e){var t,n,r,o=e.lazy,l=e.block,c=e.defaultValue,d=e.values,m=e.groupId,h=e.className,f=a.Children.map(e.children,(function(e){if((0,a.isValidElement)(e)&&void 0!==e.props.value)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),v=null!=d?d:f.map((function(e){var t=e.props;return{value:t.value,label:t.label}})),y=(0,p.lx)(v,(function(e,t){return e.value===t.value}));if(y.length>0)throw new Error('Docusaurus error: Duplicate values "'+y.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.');var g=null===c?c:null!=(t=null!=c?c:null==(n=f.find((function(e){return e.props.default})))?void 0:n.props.value)?t:null==(r=f[0])?void 0:r.props.value;if(null!==g&&!v.some((function(e){return e.value===g})))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+g+'" but none of its children has the corresponding value. Available values are: '+v.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");var k=i(),b=k.tabGroupChoices,w=k.setTabGroupChoices,x=(0,a.useState)(g),N=x[0],T=x[1],q=[],E=(0,p.o5)().blockElementScrollPositionUntilNextRender;if(null!=m){var C=b[m];null!=C&&C!==N&&v.some((function(e){return e.value===C}))&&T(C)}var G=function(e){var t=e.currentTarget,n=q.indexOf(t),r=v[n].value;r!==N&&(E(t),T(r),null!=m&&w(m,r))},O=function(e){var t,n=null;switch(e.key){case"ArrowRight":var r=q.indexOf(e.currentTarget)+1;n=q[r]||q[0];break;case"ArrowLeft":var a=q.indexOf(e.currentTarget)-1;n=q[a]||q[q.length-1]}null==(t=n)||t.focus()};return a.createElement("div",{className:"tabs-container"},a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,s.Z)("tabs",{"tabs--block":l},h)},v.map((function(e){var t=e.value,n=e.label;return a.createElement("li",{role:"tab",tabIndex:N===t?0:-1,"aria-selected":N===t,className:(0,s.Z)("tabs__item",u,{"tabs__item--active":N===t}),key:t,ref:function(e){return q.push(e)},onKeyDown:O,onFocus:G,onClick:G},null!=n?n:t)}))),o?(0,a.cloneElement)(f.filter((function(e){return e.props.value===N}))[0],{className:"margin-vert--md"}):a.createElement("div",{className:"margin-vert--md"},f.map((function(e,t){return(0,a.cloneElement)(e,{key:t,hidden:e.props.value!==N})}))))}function d(e){var t=(0,o.Z)();return a.createElement(c,(0,r.Z)({key:String(t)},e))}},2713:function(e,t,n){var r=(0,n(7294).createContext)(void 0);t.Z=r},7780:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return s},contentTitle:function(){return u},metadata:function(){return c},toc:function(){return d},default:function(){return h}});var r=n(7462),a=n(3366),o=(n(7294),n(4137)),l=n(7225),i=n(9647),p=["components"],s={id:"get-started",title:"Get Started",sidebar_label:"Get Started"},u=void 0,c={unversionedId:"get-started",id:"get-started",isDocsHomePage:!1,title:"Get Started",description:"To start using GraphQL Modules, all you need is to install it's package and graphql.",source:"@site/docs/get-started.md",sourceDirName:".",slug:"/get-started",permalink:"/docs/get-started",editUrl:"https://github.com/Urigo/graphql-modules/edit/master/website/docs/get-started.md",tags:[],version:"current",frontMatter:{id:"get-started",title:"Get Started",sidebar_label:"Get Started"},sidebar:"docs",previous:{title:"Introduction",permalink:"/docs/index"},next:{title:"Type Definitions (SDL)",permalink:"/docs/essentials/type-definitions"}},d=[{value:"Installation",id:"installation",children:[{value:"Your first GraphQL module",id:"your-first-graphql-module",children:[{value:"What happened here?",id:"what-happened-here",children:[],level:4}],level:3},{value:"Use your Module",id:"use-your-module",children:[],level:3},{value:"Use your Application",id:"use-your-application",children:[],level:3}],level:2},{value:"Tutorial",id:"tutorial",children:[],level:2}],m={toc:d};function h(e){var t=e.components,n=(0,a.Z)(e,p);return(0,o.kt)("wrapper",(0,r.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"To start using GraphQL Modules, all you need is to install it's package and ",(0,o.kt)("inlineCode",{parentName:"p"},"graphql"),"."),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"We highly recommend to use TypeScript for writing your backend, since it provides support for Reflection (if you plan to use dependency injection) and makes it easier to develop API services.")),(0,o.kt)("h2",{id:"installation"},"Installation"),(0,o.kt)(l.Z,{defaultValue:"yarn",values:[{label:"Yarn",value:"yarn"},{label:"npm",value:"npm"}],mdxType:"Tabs"},(0,o.kt)(i.Z,{value:"yarn",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"yarn add graphql graphql-modules\n"))),(0,o.kt)(i.Z,{value:"npm",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"npm install --save graphql graphql-modules\n")))),(0,o.kt)("h3",{id:"your-first-graphql-module"},"Your first GraphQL module"),(0,o.kt)("p",null,"To create a Module, use ",(0,o.kt)("inlineCode",{parentName:"p"},"createModule"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"import { createModule, gql } from 'graphql-modules';\n\nexport const myModule = createModule({\n  id: 'my-module',\n  dirname: __dirname,\n  typeDefs: [\n    gql`\n        type Query {\n            hello: String!\n        }\n    `,\n  ],\n  resolvers: {\n    Query: {\n      hello: () => 'world',\n    },\n  },\n});\n")),(0,o.kt)("p",null,"Each module contains GraphQL Type definitions, unique id and optionally resolvers."),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"That's not everything it can do, Module accepts also Providers (",(0,o.kt)("a",{parentName:"p",href:"./di/introduction"},"Dependency Injection"),") and ",(0,o.kt)("a",{parentName:"p",href:"./advanced/middlewares"},"Middlewares"),".")),(0,o.kt)("h4",{id:"what-happened-here"},"What happened here?"),(0,o.kt)("p",null,"We are using ",(0,o.kt)("inlineCode",{parentName:"p"},"createModule")," to declare our module, and name it as ",(0,o.kt)("inlineCode",{parentName:"p"},"my-module"),". Naming is important, because it help you to locate issues in your type definition."),(0,o.kt)("p",null,"We also added ",(0,o.kt)("inlineCode",{parentName:"p"},"dirname")," and pointed it to ",(0,o.kt)("inlineCode",{parentName:"p"},"__dirname")," in order to make it simpler later to match exception to the correct file. It's optional, but useful."),(0,o.kt)("p",null,"Next, there is ",(0,o.kt)("inlineCode",{parentName:"p"},"typeDefs")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"resolvers")," which you should already know if you are familiar with GraphQL. It defines the type we have in that module, and the implementation behind it."),(0,o.kt)("p",null,'At this point, this module acts like a types "capsule" you can load and import to various GraphQL ',(0,o.kt)("inlineCode",{parentName:"p"},"Applications"),"s."),(0,o.kt)("h3",{id:"use-your-module"},"Use your Module"),(0,o.kt)("p",null,"As mentioned before, Modules create Application, so let's create one. We are importing the module we created earlier, and provide it to the application:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"import { createApplication } from 'graphql-modules';\nimport { myModule } from './my-module';\n\n// This is your application, it contains your GraphQL schema and the implementation of it.\nconst application = createApplication({\n  modules: [myModule],\n});\n\n// This is your actual GraphQL schema\nconst mySchema = application.schema;\n")),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Application doesn't allow providing schemas or resolvers, since it's only a loader of your various modules.")),(0,o.kt)("h3",{id:"use-your-application"},"Use your Application"),(0,o.kt)("p",null,"Now that you have ",(0,o.kt)("inlineCode",{parentName:"p"},"Module"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"Application")," and you got your ",(0,o.kt)("inlineCode",{parentName:"p"},"GraphQLSchema"),", you need to make it available to consumption."),(0,o.kt)("p",null,"GraphQL-Modules allow you to do much more, like managing the lifecycle of your execution, encapsulate your HTTP request and more. To do that in the most optimal and flexible way, we need to wrap the GraphQL execution flow. Some GraphQL servers implementation allow this kind of flexibility, and some doesn't."),(0,o.kt)("p",null,(0,o.kt)("em",{parentName:"p"},"But we got you covered, and provided solution for all popular GraphQL server implementations.")),(0,o.kt)("p",null,"Your GraphQL ",(0,o.kt)("inlineCode",{parentName:"p"},"Application")," exposes ",(0,o.kt)("inlineCode",{parentName:"p"},"createExecution")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"createSubscription")," methods, which are just plug-and-play replacements for the default functions from ",(0,o.kt)("inlineCode",{parentName:"p"},"graphql-js"),"."),(0,o.kt)(l.Z,{defaultValue:"apollo",values:[{label:"Apollo Server",value:"apollo"},{label:"Express GraphQL",value:"express"},{label:"GraphQL-Helix",value:"helix"},{label:"Other servers?",value:"other"}],mdxType:"Tabs"},(0,o.kt)(i.Z,{value:"apollo",mdxType:"TabItem"},(0,o.kt)("p",null,"If you are using ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/apollographql/apollo-server"},"Apollo-Server"),", you can use ",(0,o.kt)("inlineCode",{parentName:"p"},"createSchemaForApollo")," to get a schema that is adapted for this server, and integrates with it perfectly."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript",metastring:'title="/src/server.ts"',title:'"/src/server.ts"'},"import { ApolloServer } from 'apollo-server';\nimport { application } from './application';\n\nconst schema = application.createSchemaForApollo();\n\nconst server = new ApolloServer({\n  schema,\n});\n\nserver.listen().then(({ url }) => {\n  console.log(`\ud83d\ude80 Server ready at ${url}`);\n});\n"))),(0,o.kt)(i.Z,{value:"express",mdxType:"TabItem"},(0,o.kt)("p",null,"If you are using ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/graphql/express-graphql"},"Express-GraphQL"),", here's how you do it:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript",metastring:'title="/src/server.ts"',title:'"/src/server.ts"'},"import express from 'express';\nimport graphqlHTTP from 'express-graphql';\nimport { application } from './application';\n\nconst execute = application.createExecution();\nconst schema = application.schema;\n\nconst server = express();\n\nserver.use(\n  '/',\n  graphqlHTTP({\n    schema,\n    customExecuteFn: execute,\n    graphiql: true,\n  })\n);\n\nserver.listen(4000, () => {\n  console.log(`\ud83d\ude80 Server ready at http://localhost:4000/`);\n});\n"))),(0,o.kt)(i.Z,{value:"helix",mdxType:"TabItem"},(0,o.kt)("p",null,"If you are using ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/contrawork/graphql-helix"},"GraphQL-Helix"),", here's how you do it:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript",metastring:'title="/src/server.ts"',title:'"/src/server.ts"'},"import express from 'express';\nimport { getGraphQLParameters, processRequest } from 'graphql-helix';\nimport { application } from './application';\n\nconst app = express();\napp.use(express.json());\n\napp.use('/graphql', async (req, res) => {\n  const request = {\n    body: req.body,\n    headers: req.headers,\n    method: req.method,\n    query: req.query,\n  };\n  const { operationName, query, variables } = getGraphQLParameters(request);\n\n  const result = await processRequest({\n    operationName,\n    query,\n    variables,\n    request,\n    schema: application.schema,\n    execute: application.createExecution(),\n    subscribe: application.createSubscription(),\n  });\n\n  result.headers.forEach(({ name, value }) => res.setHeader(name, value));\n  res.status(result.status);\n  res.json(result.payload);\n});\n\napp.listen(port, () => {\n  console.log(`GraphQL server is running on port ${port}.`);\n});\n"))),(0,o.kt)(i.Z,{value:"other",mdxType:"TabItem"},(0,o.kt)("p",null,"If you are using a different server or setup, you can get the custom ",(0,o.kt)("inlineCode",{parentName:"p"},"execute")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"subscribe")," functions from your ",(0,o.kt)("inlineCode",{parentName:"p"},"Application"),", and provide it to your server:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"import { createApplication } from 'graphql-modules';\n\nconst application = createApplication({\n  /* ... */\n});\n\nconst schema = application.schema;\nconst execute = application.createExecution();\nconst subscribe = application.createSubscription();\n")),(0,o.kt)("p",null,"In case you are still having issues, you can always ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/Urigo/graphql-modules/issues/new"},"report an issue on a missing integration"),", and we'll look into that ;)"))),(0,o.kt)("h2",{id:"tutorial"},"Tutorial"),(0,o.kt)("p",null,"If you're interested in a step by step tutorial, one of our community members ",(0,o.kt)("a",{parentName:"p",href:"https://blog.logrocket.com/author/godwinekuma/"},"Godwin Ekuma")," wrote an amazing article explaining ",(0,o.kt)("a",{parentName:"p",href:"https://blog.logrocket.com/graphql-modules-tutorial-how-to-modularize-graphql-schema/"},'"How to modularize GraphQL schema with GraphQL Modules"'),"."))}h.isMDXComponent=!0}}]);