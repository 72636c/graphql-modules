"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[6971],{4137:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return m}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var u=r.createContext({}),s=function(e){var t=r.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},p=function(e){var t=s(e.components);return r.createElement(u.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},c=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,u=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),c=s(n),m=a,h=c["".concat(u,".").concat(m)]||c[m]||d[m]||i;return n?r.createElement(h,l(l({ref:t},p),{},{components:n})):r.createElement(h,l({ref:t},p))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,l=new Array(i);l[0]=c;var o={};for(var u in t)hasOwnProperty.call(t,u)&&(o[u]=t[u]);o.originalType=e,o.mdxType="string"==typeof e?e:a,l[1]=o;for(var s=2;s<i;s++)l[s]=n[s];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}c.displayName="MDXCreateElement"},9970:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return o},contentTitle:function(){return u},metadata:function(){return s},toc:function(){return p},default:function(){return c}});var r=n(7462),a=n(3366),i=(n(7294),n(4137)),l=["components"],o={id:"index",title:"Introduction",sidebar_label:"Introduction"},u=void 0,s={unversionedId:"index",id:"index",isDocsHomePage:!1,title:"Introduction",description:"GraphQL Modules is a utility library, allowing you separate your GraphQL schema implementation into small, reusable, easy-to-implement and easy-to-test pieces.",source:"@site/docs/index.md",sourceDirName:".",slug:"/index",permalink:"/docs/index",editUrl:"https://github.com/Urigo/graphql-modules/edit/master/website/docs/index.md",version:"current",frontMatter:{id:"index",title:"Introduction",sidebar_label:"Introduction"},sidebar:"docs",next:{title:"Get Started",permalink:"/docs/get-started"}},p=[{value:"Structure",id:"structure",children:[]},{value:"Example",id:"example",children:[{value:"User Module",id:"user-module",children:[]},{value:"Authentication Module",id:"authentication-module",children:[]},{value:"Profile Module",id:"profile-module",children:[]},{value:"Gallery Module",id:"gallery-module",children:[]}]}],d={toc:p};function c(e){var t=e.components,o=(0,a.Z)(e,l);return(0,i.kt)("wrapper",(0,r.Z)({},d,o,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"GraphQL Modules")," is a utility library, allowing you separate your GraphQL schema implementation into small, reusable, easy-to-implement and easy-to-test pieces."),(0,i.kt)("p",null,"In GraphQL Modules, each module has its own GraphQL type definitions and resolvers implementations."),(0,i.kt)("p",null,"The idea behind this is to implement the ",(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("a",{parentName:"strong",href:"https://deviq.com/separation-of-concerns/"},"Separation of Concerns"))," design pattern in GraphQL and to allow you to write simple modules that only do what they need to. This way, they're easier to write, maintain and test."),(0,i.kt)("p",null,"During development, GraphQL-Modules allow you to separate your GraphQL schema definitions, while in runtime, you'll be able to serve a unified schema."),(0,i.kt)("h2",{id:"structure"},"Structure"),(0,i.kt)("p",null,"Each GraphQL ",(0,i.kt)("inlineCode",{parentName:"p"},"module")," is built using the basics of GraphQL:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Type definitions"),(0,i.kt)("li",{parentName:"ul"},"Resolver functions")),(0,i.kt)("p",null,"As your application grows, modules can use ",(0,i.kt)("a",{parentName:"p",href:"./di/introduction"},"Dependency Injection"),", if you wish to separate your resolvers and your business-logic."),(0,i.kt)("p",null,"The structure of GraphQL API with GraphQL Modules is flat. ",(0,i.kt)("inlineCode",{parentName:"p"},"Module"),"s are on the same level and there's ",(0,i.kt)("inlineCode",{parentName:"p"},"Application")," on top of them."),(0,i.kt)("h2",{id:"example"},"Example"),(0,i.kt)("p",null,"To get a better understanding of the structure and extensibility of modules, let's make an example app with four modules:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"User (define what a user in our app should have)"),(0,i.kt)("li",{parentName:"ul"},"Authentication (define only what is needed to authenticate users)"),(0,i.kt)("li",{parentName:"ul"},"Profile (define a user's profile)"),(0,i.kt)("li",{parentName:"ul"},"Gallery (define a user's photo gallery)")),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"example",src:n(1553).Z})),(0,i.kt)("p",null,"Let's understand how to define each module's schema and how to separate it into smaller pieces."),(0,i.kt)("p",null,"Each one of our modules, contributes small part of the schema, and the GraphQL ",(0,i.kt)("inlineCode",{parentName:"p"},"Application")," merged it into a complete schema."),(0,i.kt)("h3",{id:"user-module"},"User Module"),(0,i.kt)("p",null,"This module allows querying users by id and defines only the very basic fields."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-graphql"},"type Query {\n  user(id: ID!): User\n}\n\ntype User {\n  id: ID!\n  email: String!\n}\n")),(0,i.kt)("h3",{id:"authentication-module"},"Authentication Module"),(0,i.kt)("p",null,"This module declares the authentication basics in ",(0,i.kt)("inlineCode",{parentName:"p"},"Mutation"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"Query")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"User")," types."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-graphql"},"extend type Query {\n  me: User\n}\n\ntype Mutation {\n  login(username: String!, password: String!): User\n  signup(username: String!, password: String!): User\n}\n\nextend type User {\n  username: String!\n}\n")),(0,i.kt)("h3",{id:"profile-module"},"Profile Module"),(0,i.kt)("p",null,"The profile module declares the ",(0,i.kt)("inlineCode",{parentName:"p"},"Profile")," type and adds the ",(0,i.kt)("inlineCode",{parentName:"p"},"profile")," field to ",(0,i.kt)("inlineCode",{parentName:"p"},"User"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-graphql"},"type Profile {\n  age: Int!\n  name: String!\n}\n\nextend type User {\n  profile: Profile!\n}\n")),(0,i.kt)("h3",{id:"gallery-module"},"Gallery Module"),(0,i.kt)("p",null,"The gallery module is similar to the ",(0,i.kt)("inlineCode",{parentName:"p"},"profile")," module. It declares only the parts of the schema that are required by the gallery feature:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-graphql"},"type Image {\n  id: ID!\n  url: String!\n  user: User!\n}\n\nextend type User {\n  gallery: [Image]\n}\n\nextend type Mutation {\n  uploadPicture(image: File!): Image\n}\n")))}c.isMDXComponent=!0},1553:function(e,t,n){t.Z=n.p+"assets/images/example-676b1bc21e87c4f5026442e6b4dd1161.png"}}]);