"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[9540],{4137:function(e,t,r){r.d(t,{Zo:function(){return p},kt:function(){return m}});var n=r(7294);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,i=function(e,t){if(null==e)return{};var r,n,i={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var s=n.createContext({}),l=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},p=function(e){var t=l(e.components);return n.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,i=e.mdxType,o=e.originalType,s=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),d=l(r),m=i,v=d["".concat(s,".").concat(m)]||d[m]||u[m]||o;return r?n.createElement(v,a(a({ref:t},p),{},{components:r})):n.createElement(v,a({ref:t},p))}));function m(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=r.length,a=new Array(o);a[0]=d;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:i,a[1]=c;for(var l=2;l<o;l++)a[l]=r[l];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},8448:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return c},contentTitle:function(){return s},metadata:function(){return l},toc:function(){return p},default:function(){return d}});var n=r(7462),i=r(3366),o=(r(7294),r(4137)),a=["components"],c={id:"schema-directives",title:"Schema Directives",sidebar_label:"Schema Directives"},s=void 0,l={unversionedId:"recipes/schema-directives",id:"version-legacy/recipes/schema-directives",isDocsHomePage:!1,title:"Schema Directives",description:"GraphQL Modules allows you to define schema directives on a per-module basis. For example, we can add a schema directive to our module like this:",source:"@site/versioned_docs/version-legacy/recipes/schema-directives.md",sourceDirName:"recipes",slug:"/recipes/schema-directives",permalink:"/docs/legacy/recipes/schema-directives",editUrl:"https://github.com/Urigo/graphql-modules/edit/master/website/versioned_docs/version-legacy/recipes/schema-directives.md",tags:[],version:"legacy",frontMatter:{id:"schema-directives",title:"Schema Directives",sidebar_label:"Schema Directives"},sidebar:"version-legacy/docs",previous:{title:"Database Connection Pooling",permalink:"/docs/legacy/recipes/db-connection-pooling"},next:{title:"Integration with Apollo-Server",permalink:"/docs/legacy/recipes/apollo-server"}},p=[],u={toc:p};function d(e){var t=e.components,r=(0,i.Z)(e,a);return(0,o.kt)("wrapper",(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"GraphQL Modules allows you to define schema directives on a per-module basis. For example, we can add a schema directive to our module like this:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"import { GraphQLModule } from '@graphql-modules/core';\nimport { SchemaDirectiveVisitor } from 'graphql-tools';\n\nconst typeDefs = gql`\n  directive @date on FIELD_DEFINITION\n\n  scalar Date\n\n  type Query {\n    today: Date @date\n  }\n`;\nconst resolvers = {\n  Query: {\n    today: () => new Date();\n  },\n};\n\nclass FormattableDateDirective extends SchemaDirectiveVisitor {\n  public visitFieldDefinition(field) {\n    const { resolve = defaultFieldResolver } = field;\n\n    field.args.push({\n      name: 'format',\n      type: GraphQLString,\n    });\n\n    field.resolve = async function (source, args, context, info) {\n      const date = await resolve.call(this, source, args, context, info);\n      return date.toLocaleDateString();\n    };\n\n    field.type = GraphQLString;\n  }\n}\n\nconst schemaDirectives = {\n  date: FormattableDateDirective\n};\n\nconst { schema } = new GraphQLModule({\n  typeDefs,\n  resolvers,\n  schemaDirectives,\n});\n")),(0,o.kt)("p",null,"GraphQL Modules won't automatically apply your directives when it generates a schema for a module to avoid applying the same directive more than once. However, you can set the ",(0,o.kt)("inlineCode",{parentName:"p"},"visitSchemaDirectives")," option to ",(0,o.kt)("inlineCode",{parentName:"p"},"true")," in your root module and the directives from all your combined modules will be applied to your final schema."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"const { schema } = new GraphQLModule({\n  typeDefs,\n  resolvers,\n  schemaDirectives,\n  visitSchemaDirectives: true,\n});\n")))}d.isMDXComponent=!0}}]);