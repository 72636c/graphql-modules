(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{119:function(e,t,r){"use strict";r.r(t),r.d(t,"frontMatter",(function(){return i})),r.d(t,"metadata",(function(){return c})),r.d(t,"toc",(function(){return s})),r.d(t,"default",(function(){return p}));var n=r(3),o=r(9),a=(r(0),r(166)),i={id:"schema-directives",title:"Schema Directives",sidebar_label:"Schema Directives"},c={unversionedId:"recipes/schema-directives",id:"version-legacy/recipes/schema-directives",isDocsHomePage:!1,title:"Schema Directives",description:"GraphQL Modules allows you to define schema directives on a per-module basis. For example, we can add a schema directive to our module like this:",source:"@site/versioned_docs/version-legacy/recipes/schema-directives.md",slug:"/recipes/schema-directives",permalink:"/docs/legacy/recipes/schema-directives",editUrl:"https://github.com/Urigo/graphql-modules/edit/master/website/versioned_docs/version-legacy/recipes/schema-directives.md",version:"legacy",sidebar_label:"Schema Directives",sidebar:"version-legacy/docs",previous:{title:"Database Connection Pooling",permalink:"/docs/legacy/recipes/db-connection-pooling"},next:{title:"Integration With Apollo-Server",permalink:"/docs/legacy/recipes/apollo-server"}},s=[],l={toc:s};function p(e){var t=e.components,r=Object(o.a)(e,["components"]);return Object(a.b)("wrapper",Object(n.a)({},l,r,{components:t,mdxType:"MDXLayout"}),Object(a.b)("p",null,"GraphQL Modules allows you to define schema directives on a per-module basis. For example, we can add a schema directive to our module like this:"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-typescript"},"import { GraphQLModule } from '@graphql-modules/core';\nimport { SchemaDirectiveVisitor } from 'graphql-tools';\n\nconst typeDefs = gql`\n  directive @date on FIELD_DEFINITION\n\n  scalar Date\n\n  type Query {\n    today: Date @date\n  }\n`;\nconst resolvers = {\n  Query: {\n    today: () => new Date();\n  },\n};\n\nclass FormattableDateDirective extends SchemaDirectiveVisitor {\n  public visitFieldDefinition(field) {\n    const { resolve = defaultFieldResolver } = field;\n\n    field.args.push({\n      name: 'format',\n      type: GraphQLString,\n    });\n\n    field.resolve = async function (source, args, context, info) {\n      const date = await resolve.call(this, source, args, context, info);\n      return date.toLocaleDateString();\n    };\n\n    field.type = GraphQLString;\n  }\n}\n\nconst schemaDirectives = {\n  date: FormattableDateDirective\n};\n\nconst { schema } = new GraphQLModule({\n  typeDefs,\n  resolvers,\n  schemaDirectives,\n});\n")),Object(a.b)("p",null,"GraphQL Modules won't automatically apply your directives when it generates a schema for a module to avoid applying the same directive more than once. However, you can set the ",Object(a.b)("inlineCode",{parentName:"p"},"visitSchemaDirectives")," option to ",Object(a.b)("inlineCode",{parentName:"p"},"true")," in your root module and the directives from all your combined modules will be applied to your final schema."),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-typescript"},"const { schema } = new GraphQLModule({\n  typeDefs,\n  resolvers,\n  schemaDirectives,\n  visitSchemaDirectives: true,\n});\n")))}p.isMDXComponent=!0},166:function(e,t,r){"use strict";r.d(t,"a",(function(){return u})),r.d(t,"b",(function(){return v}));var n=r(0),o=r.n(n);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function c(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var l=o.a.createContext({}),p=function(e){var t=o.a.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):c(c({},t),e)),r},u=function(e){var t=p(e.components);return o.a.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return o.a.createElement(o.a.Fragment,{},t)}},m=o.a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,a=e.originalType,i=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),u=p(r),m=n,v=u["".concat(i,".").concat(m)]||u[m]||d[m]||a;return r?o.a.createElement(v,c(c({ref:t},l),{},{components:r})):o.a.createElement(v,c({ref:t},l))}));function v(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var a=r.length,i=new Array(a);i[0]=m;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:n,i[1]=c;for(var l=2;l<a;l++)i[l]=r[l];return o.a.createElement.apply(null,i)}return o.a.createElement.apply(null,r)}m.displayName="MDXCreateElement"}}]);