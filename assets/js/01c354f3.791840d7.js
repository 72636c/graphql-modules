(window.webpackJsonp=window.webpackJsonp||[]).push([[3],{103:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return a})),t.d(n,"metadata",(function(){return i})),t.d(n,"toc",(function(){return c})),t.d(n,"default",(function(){return l}));var o=t(3),r=t(9),s=(t(0),t(166)),a={id:"understanding-session",title:"Understanding Session",sidebar_label:"Understanding Session"},i={unversionedId:"introduction/understanding-session",id:"version-legacy/introduction/understanding-session",isDocsHomePage:!1,title:"Understanding Session",description:"When a GraphQL request arrives at GraphQL Modules, GraphQL Modules creates a scope only for that network request.",source:"@site/versioned_docs/version-legacy/introduction/understanding-session.md",slug:"/introduction/understanding-session",permalink:"/docs/legacy/introduction/understanding-session",editUrl:"https://github.com/Urigo/graphql-modules/edit/master/website/versioned_docs/version-legacy/introduction/understanding-session.md",version:"legacy",sidebar_label:"Understanding Session",sidebar:"version-legacy/docs",previous:{title:"Implement Your Providers",permalink:"/docs/legacy/introduction/implement-providers"},next:{title:"Dependencies Between Modules",permalink:"/docs/legacy/introduction/dependencies"}},c=[{value:"Using in <code>express-graphql</code>",id:"using-in-express-graphql",children:[]},{value:"Using in <code>ApolloServer</code>",id:"using-in-apolloserver",children:[]},{value:"Using in another application that doesn&#39;t use GraphQL Modules on the top",id:"using-in-another-application-that-doesnt-use-graphql-modules-on-the-top",children:[]}],p={toc:c};function l(e){var n=e.components,t=Object(r.a)(e,["components"]);return Object(s.b)("wrapper",Object(o.a)({},p,t,{components:n,mdxType:"MDXLayout"}),Object(s.b)("p",null,"When a GraphQL request arrives at GraphQL Modules, GraphQL Modules creates a scope only for that network request.\nGraphQL Modules identifies this scope by a unique object given in the global application context.\nThe global application context defined in your GraphQL server/library is not the same with the module's context, because all resolvers, context builders, dependency injections, etc. are encapsulated in the global application context."),Object(s.b)("p",null,"You can decide how to pass the session object in your application's context-building phase."),Object(s.b)("p",null,"GraphQL Modules tries to get the ",Object(s.b)("inlineCode",{parentName:"p"},"session")," property of your global application context first, but if there is no ",Object(s.b)("inlineCode",{parentName:"p"},"session")," property, it takes all application context objects as your network session objects."),Object(s.b)("h3",{id:"using-in-express-graphql"},"Using in ",Object(s.b)("inlineCode",{parentName:"h3"},"express-graphql")),Object(s.b)("p",null,"For example, ",Object(s.b)("inlineCode",{parentName:"p"},"express-graphql")," passes ",Object(s.b)("inlineCode",{parentName:"p"},"express.Request")," by default as the global application context:"),Object(s.b)("pre",null,Object(s.b)("code",{parentName:"pre",className:"language-typescript"},"const MyModule = new GraphQLModule({\n  context(session: express.Request) {\n    return {\n      authToken: session.headers.authorization,\n    };\n  },\n});\n\n// Some `express` code\napp.use(\n  '/graphql',\n  graphqlHTTP({\n    schema: MyModule.schema,\n  })\n);\n")),Object(s.b)("p",null,"If we need more stuff in the network session:"),Object(s.b)("pre",null,Object(s.b)("code",{parentName:"pre",className:"language-typescript"},"interface MyModuleSession {\n  req: express.Request,\n  res: express.Response\n}\nconst MyModule = new GraphQLModule({\n  context(session: MyModuleSession) {\n    session.res.on('finish', () => {\n      // Some cleanup\n    });\n    return {\n      authToken: session.req.headers.authorization,\n    };\n  }\n});\n// Some `express` code\napp.use('/graphql', graphqlHTTP((req, res) => ({\n  schema: MyModule.schema,\n  context: { session: { req, res }, /* other things will be ignored ... */ }\n  // or without the `session` property\n  context: { req, res }\n})));\n")),Object(s.b)("h3",{id:"using-in-apolloserver"},"Using in ",Object(s.b)("inlineCode",{parentName:"h3"},"ApolloServer")),Object(s.b)("p",null,"On the other hand, ",Object(s.b)("inlineCode",{parentName:"p"},"apollo-server")," needs to be passed it like below:"),Object(s.b)("pre",null,Object(s.b)("code",{parentName:"pre",className:"language-typescript"},"new ApolloServer({\n  modules: [MyModule],\n  context: ({ req, res }) => ({ req, res }),\n  // or\n  context: ({ req, res }) => ({ session: { req, res } }),\n  // or\n  context: (session) => ({ session }),\n  // or\n  context: (session) => session,\n});\n")),Object(s.b)("h3",{id:"using-in-another-application-that-doesnt-use-graphql-modules-on-the-top"},"Using in another application that doesn't use GraphQL Modules on the top"),Object(s.b)("p",null,"Even if you want to use ",Object(s.b)("inlineCode",{parentName:"p"},"GraphQLModule")," in a non-GraphQL-Modules application, you can safely pass the context builder of ",Object(s.b)("inlineCode",{parentName:"p"},"GraphQLModule"),".\nAnd you can use the internal context of your ",Object(s.b)("inlineCode",{parentName:"p"},"GraphQLModule")," including ",Object(s.b)("strong",{parentName:"p"},"Dependency Injection"),".\nGraphQL Modules internally handles ",Object(s.b)("inlineCode",{parentName:"p"},"session")," without the need of passing ",Object(s.b)("inlineCode",{parentName:"p"},"session")," specifically."),Object(s.b)("h4",{id:"using-modules-of-apolloserver"},"Using ",Object(s.b)("inlineCode",{parentName:"h4"},"modules")," of ",Object(s.b)("inlineCode",{parentName:"h4"},"ApolloServer")),Object(s.b)("pre",null,Object(s.b)("code",{parentName:"pre",className:"language-typescript"},"const MyAccountsModule = AccountsModule.forRoot({ ... });\nnew ApolloServer({\n  modules: [MyAccountsModule]\n  typeDefs: myTypeDefs,\n  resolvers: myResolvers,\n  context: ({ req, res }) => {\n    // My context stuff\n    return {\n      myContextProp: {...},\n      ...MyAccountsModule.context({ req, res })\n    }\n  }\n})\n")),Object(s.b)("h4",{id:"using-schema-stitching"},"Using schema stitching"),Object(s.b)("p",null,"You can safely extract reusable ",Object(s.b)("inlineCode",{parentName:"p"},"typeDefs"),", ",Object(s.b)("inlineCode",{parentName:"p"},"resolvers")," and ",Object(s.b)("inlineCode",{parentName:"p"},"context")," from your ",Object(s.b)("inlineCode",{parentName:"p"},"GraphQLModule"),", and use it outside ",Object(s.b)("inlineCode",{parentName:"p"},"GraphQLModule"),"."),Object(s.b)("pre",null,Object(s.b)("code",{parentName:"pre",className:"language-typescript"},"import { mergeTypeDefs, mergeResolvers } from 'graphql-toolkit';\n\nconst MyAccountsModule = AccountsModule.forRoot({ ... });\n\nconst schema = mergeSchemas({\n  typeDefs: [\n    MyAccountsModule.typeDefs,\n    gql`\n      type Query {\n        someField: SomeType\n      }\n    `\n  ],\n  resolvers: [\n    MyAccountsModule.resolvers,\n    {\n      Query: {\n        someField: ...\n      }\n    }\n  ]\n});\n\napp.use('/graphql', graphqlHTTP({\n  schema,\n  graphiql: true\n}));\n")),Object(s.b)("p",null,"This is what ",Object(s.b)("inlineCode",{parentName:"p"},"Session")," means in GraphQL Modules.\nYou can read more about ",Object(s.b)("strong",{parentName:"p"},Object(s.b)("a",{parentName:"strong",href:"/docs/legacy/introduction/dependency-injection#provider-scopes"},"Provider Scopes"))," in the ",Object(s.b)("strong",{parentName:"p"},"Dependency Injection")," section."))}l.isMDXComponent=!0},166:function(e,n,t){"use strict";t.d(n,"a",(function(){return u})),t.d(n,"b",(function(){return h}));var o=t(0),r=t.n(o);function s(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){s(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,o,r=function(e,n){if(null==e)return{};var t,o,r={},s=Object.keys(e);for(o=0;o<s.length;o++)t=s[o],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(o=0;o<s.length;o++)t=s[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var p=r.a.createContext({}),l=function(e){var n=r.a.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},u=function(e){var n=l(e.components);return r.a.createElement(p.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.a.createElement(r.a.Fragment,{},n)}},b=r.a.forwardRef((function(e,n){var t=e.components,o=e.mdxType,s=e.originalType,a=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),u=l(t),b=o,h=u["".concat(a,".").concat(b)]||u[b]||d[b]||s;return t?r.a.createElement(h,i(i({ref:n},p),{},{components:t})):r.a.createElement(h,i({ref:n},p))}));function h(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var s=t.length,a=new Array(s);a[0]=b;var i={};for(var c in n)hasOwnProperty.call(n,c)&&(i[c]=n[c]);i.originalType=e,i.mdxType="string"==typeof e?e:o,a[1]=i;for(var p=2;p<s;p++)a[p]=t[p];return r.a.createElement.apply(null,a)}return r.a.createElement.apply(null,t)}b.displayName="MDXCreateElement"}}]);