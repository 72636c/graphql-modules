"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[4022],{4137:function(e,n,t){t.d(n,{Zo:function(){return s},kt:function(){return m}});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function l(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?l(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},l=Object.keys(e);for(r=0;r<l.length;r++)t=l[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)t=l[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var u=r.createContext({}),c=function(e){var n=r.useContext(u),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},s=function(e){var n=c(e.components);return r.createElement(u.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},p=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,l=e.originalType,u=e.parentName,s=i(e,["components","mdxType","originalType","parentName"]),p=c(t),m=a,f=p["".concat(u,".").concat(m)]||p[m]||d[m]||l;return t?r.createElement(f,o(o({ref:n},s),{},{components:t})):r.createElement(f,o({ref:n},s))}));function m(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var l=t.length,o=new Array(l);o[0]=p;var i={};for(var u in n)hasOwnProperty.call(n,u)&&(i[u]=n[u]);i.originalType=e,i.mdxType="string"==typeof e?e:a,o[1]=i;for(var c=2;c<l;c++)o[c]=t[c];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}p.displayName="MDXCreateElement"},9647:function(e,n,t){var r=t(7294);n.Z=function(e){var n=e.children,t=e.hidden,a=e.className;return r.createElement("div",{role:"tabpanel",hidden:t,className:a},n)}},7225:function(e,n,t){t.d(n,{Z:function(){return p}});var r=t(7462),a=t(7294),l=t(1048),o=t(2713);var i=function(){var e=(0,a.useContext)(o.Z);if(null==e)throw new Error('"useUserPreferencesContext" is used outside of "Layout" component.');return e},u=t(3309),c=t(6010),s="tabItem_1uMI";function d(e){var n,t,r,l=e.lazy,o=e.block,d=e.defaultValue,p=e.values,m=e.groupId,f=e.className,v=a.Children.map(e.children,(function(e){if((0,a.isValidElement)(e)&&void 0!==e.props.value)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),h=null!=p?p:v.map((function(e){var n=e.props;return{value:n.value,label:n.label}})),g=(0,u.lx)(h,(function(e,n){return e.value===n.value}));if(g.length>0)throw new Error('Docusaurus error: Duplicate values "'+g.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.');var w=null===d?d:null!=(n=null!=d?d:null==(t=v.find((function(e){return e.props.default})))?void 0:t.props.value)?n:null==(r=v[0])?void 0:r.props.value;if(null!==w&&!h.some((function(e){return e.value===w})))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+w+'" but none of its children has the corresponding value. Available values are: '+h.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");var k=i(),y=k.tabGroupChoices,b=k.setTabGroupChoices,x=(0,a.useState)(w),N=x[0],T=x[1],C=[],E=(0,u.o5)().blockElementScrollPositionUntilNextRender;if(null!=m){var j=y[m];null!=j&&j!==N&&h.some((function(e){return e.value===j}))&&T(j)}var O=function(e){var n=e.currentTarget,t=C.indexOf(n),r=h[t].value;r!==N&&(E(n),T(r),null!=m&&b(m,r))},M=function(e){var n,t=null;switch(e.key){case"ArrowRight":var r=C.indexOf(e.currentTarget)+1;t=C[r]||C[0];break;case"ArrowLeft":var a=C.indexOf(e.currentTarget)-1;t=C[a]||C[C.length-1]}null==(n=t)||n.focus()};return a.createElement("div",{className:"tabs-container"},a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,c.Z)("tabs",{"tabs--block":o},f)},h.map((function(e){var n=e.value,t=e.label;return a.createElement("li",{role:"tab",tabIndex:N===n?0:-1,"aria-selected":N===n,className:(0,c.Z)("tabs__item",s,{"tabs__item--active":N===n}),key:n,ref:function(e){return C.push(e)},onKeyDown:M,onFocus:O,onClick:O},null!=t?t:n)}))),l?(0,a.cloneElement)(v.filter((function(e){return e.props.value===N}))[0],{className:"margin-vert--md"}):a.createElement("div",{className:"margin-vert--md"},v.map((function(e,n){return(0,a.cloneElement)(e,{key:n,hidden:e.props.value!==N})}))))}function p(e){var n=(0,l.Z)();return a.createElement(d,(0,r.Z)({key:String(n)},e))}},2713:function(e,n,t){var r=(0,t(7294).createContext)(void 0);n.Z=r},7712:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return c},contentTitle:function(){return s},metadata:function(){return d},toc:function(){return p},default:function(){return f}});var r=t(7462),a=t(3366),l=(t(7294),t(4137)),o=t(7225),i=t(9647),u=["components"],c={id:"middlewares",title:"Middlewares"},s=void 0,d={unversionedId:"advanced/middlewares",id:"advanced/middlewares",isDocsHomePage:!1,title:"Middlewares",description:"Middleware is a way to intercept individual resolve functions or a group of them and return a different result or throw an exception based on a condition. Each middleware can access everything that resolve function receives. The ability to access context and the Injector makes it even more powerful.",source:"@site/docs/advanced/middlewares.md",sourceDirName:"advanced",slug:"/advanced/middlewares",permalink:"/docs/advanced/middlewares",editUrl:"https://github.com/Urigo/graphql-modules/edit/master/website/docs/advanced/middlewares.md",tags:[],version:"current",frontMatter:{id:"middlewares",title:"Middlewares"},sidebar:"docs",previous:{title:"Subscriptions",permalink:"/docs/advanced/subscriptions"},next:{title:"Execution Context",permalink:"/docs/advanced/execution-context"}},p=[{value:"Middleware function",id:"middleware-function",children:[{value:"What is the <code>event</code> object?",id:"what-is-the-event-object",children:[],level:3},{value:"How to use <code>next</code> function?",id:"how-to-use-next-function",children:[],level:3}],level:2},{value:"Intercepting results",id:"intercepting-results",children:[],level:2},{value:"Exceptions",id:"exceptions",children:[],level:2},{value:"Registering middlewares",id:"registering-middlewares",children:[],level:2},{value:"Execution order",id:"execution-order",children:[],level:2}],m={toc:p};function f(e){var n=e.components,t=(0,a.Z)(e,u);return(0,l.kt)("wrapper",(0,r.Z)({},m,t,{components:n,mdxType:"MDXLayout"}),(0,l.kt)("p",null,"Middleware is a way to intercept individual resolve functions or a group of them and return a different result or throw an exception based on a condition. Each middleware can access everything that resolve function receives. The ability to access context and the ",(0,l.kt)("a",{parentName:"p",href:"/docs/di/introduction"},(0,l.kt)("inlineCode",{parentName:"a"},"Injector"))," makes it even more powerful."),(0,l.kt)("h2",{id:"middleware-function"},"Middleware function"),(0,l.kt)("p",null,"The middleware function can be ",(0,l.kt)("inlineCode",{parentName:"p"},"sync")," or ",(0,l.kt)("inlineCode",{parentName:"p"},"async")," and accepts two arguments. First one is an object containing ",(0,l.kt)("inlineCode",{parentName:"p"},"root"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"args"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"context")," and ",(0,l.kt)("inlineCode",{parentName:"p"},"info")," properties, we call it ",(0,l.kt)("inlineCode",{parentName:"p"},"event"),". The other argument is a function that calls the next middleware, called ",(0,l.kt)("inlineCode",{parentName:"p"},"next"),"."),(0,l.kt)("h3",{id:"what-is-the-event-object"},"What is the ",(0,l.kt)("inlineCode",{parentName:"h3"},"event")," object?"),(0,l.kt)("p",null,"Take a look at the regular resolve function."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-typescript"},"function resolve(root, args, context, info) {\n  /* ... */\n}\n")),(0,l.kt)("p",null,"It accepts four arguments and in Middlewares we simply wrap them in an object."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-typescript"},"function middleware({ root, args, context, info }, next) {\n  /* ... */\n}\n")),(0,l.kt)("p",null,"Because a middleware function can access ",(0,l.kt)("inlineCode",{parentName:"p"},"context"),", it can also extract the ",(0,l.kt)("inlineCode",{parentName:"p"},"Injector")," and get access to Dependency Injection."),(0,l.kt)("h3",{id:"how-to-use-next-function"},"How to use ",(0,l.kt)("inlineCode",{parentName:"h3"},"next")," function?"),(0,l.kt)("p",null,"The second argument of a middleware is the ",(0,l.kt)("inlineCode",{parentName:"p"},"next")," function and its only job is to call the middleware or the resolve function itself."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-typescript"},"function middleware({ root, args, context, info }, next) {\n  /* code */\n\n  return next();\n}\n")),(0,l.kt)("p",null,"It's important to understand that every middleware should do one of three things:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"throw an exception"),(0,l.kt)("li",{parentName:"ul"},"return the result of ",(0,l.kt)("inlineCode",{parentName:"li"},"next()")),(0,l.kt)("li",{parentName:"ul"},"return a value")),(0,l.kt)("p",null,"In case where a middleware returns nothing (",(0,l.kt)("inlineCode",{parentName:"p"},"undefined"),"), it's going to be used as the result of a field resolver. So be careful!"),(0,l.kt)("h2",{id:"intercepting-results"},"Intercepting results"),(0,l.kt)("p",null,"Middlewares are capable of intercepting the field resolver or even not invoke it at all and resolve a different value."),(0,l.kt)("p",null,"An example of how to let the field resolver run and intercept its result:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-typescript"},"async function middleware({ root, args, context, info }, next) {\n  /* code */\n\n  const result = await next();\n\n  if (someCondition(result)) {\n    return null;\n  }\n\n  return result;\n}\n")),(0,l.kt)("p",null,"You can also resolve any value, without calling the field resolve function:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-typescript"},"async function middleware({ root, args, context, info }, next) {\n  /* code */\n\n  return {\n    /* my result */\n  };\n}\n")),(0,l.kt)("h2",{id:"exceptions"},"Exceptions"),(0,l.kt)("p",null,"Middlewares behave like regular resolve functions, meaning they can also throw exceptions. It's a useful thing when you need to make sure a field can only be access when the user is logged in or has valid rights."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-typescript"},"async function middleware({ root, args, context, info }, next) {\n  if (!context.injector.get(Auth).isLoggedIn()) {\n    throw new Error('Not logged in');\n  }\n\n  return next();\n}\n")),(0,l.kt)("h2",{id:"registering-middlewares"},"Registering middlewares"),(0,l.kt)("p",null,"You know how to write middlewares and what they offer, now let's match a middleware with a corresponding type and field."),(0,l.kt)("p",null,"Three ways of registering middlewares:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"A specific field of a specific type"),(0,l.kt)("li",{parentName:"ul"},"All fields of a specific type"),(0,l.kt)("li",{parentName:"ul"},"All fields of all types")),(0,l.kt)("p",null,"Here's a first option, intercepting the ",(0,l.kt)("inlineCode",{parentName:"p"},"Query.me")," field resolver:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-typescript"},'{\n  "Query": {\n    "me": [yourMiddleware]\n  }\n}\n')),(0,l.kt)("p",null,"To intercept all fields of a specific type use ",(0,l.kt)("inlineCode",{parentName:"p"},"*")," mask:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-typescript"},'{\n  "Query": {\n    "*": [yourMiddleware]\n  }\n}\n')),(0,l.kt)("p",null,"To intercept all fields of all possible types, use ",(0,l.kt)("inlineCode",{parentName:"p"},"*")," mask twice:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-typescript"},'{\n  "*": {\n    "*": [yourMiddleware]\n  }\n}\n')),(0,l.kt)("p",null,"Now let's understand how to register middlewares in a Module and an Application. Take a look at following example."),(0,l.kt)(o.Z,{defaultValue:"module",values:[{label:"Module",value:"module"},{label:"Application",value:"application"}],mdxType:"Tabs"},(0,l.kt)(i.Z,{value:"module",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-typescript"},"import { createModule } from 'graphql-modules';\n\nconst myModule = createModule({\n  /* ... */,\n  middlewares: {\n    Query: {\n      me: [myMiddleware]\n    }\n  }\n})\n"))),(0,l.kt)(i.Z,{value:"application",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-typescript"},"import { createApplication } from 'graphql-modules';\n\nconst application = createApplication({\n  /* ... */,\n  middlewares: {\n    Query: {\n      me: [myMiddleware]\n    }\n  }\n})\n")))),(0,l.kt)("h2",{id:"execution-order"},"Execution order"),(0,l.kt)("p",null,"Without strict rules on the order of execution, you might get unexpected results."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-log"},"-> Application *.*\n  -> Module *.*\n    -> Application Type.*\n      -> Module Type.*\n        -> Application Type.Field\n          -> Module Type.Field\n")))}f.isMDXComponent=!0}}]);