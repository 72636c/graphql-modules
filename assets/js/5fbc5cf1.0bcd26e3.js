(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[1207],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return c},kt:function(){return d}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=r.createContext({}),s=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=s(e.components);return r.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,p=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),m=s(n),d=a,f=m["".concat(p,".").concat(d)]||m[d]||u[d]||i;return n?r.createElement(f,o(o({ref:t},c),{},{components:n})):r.createElement(f,o({ref:t},c))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=m;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l.mdxType="string"==typeof e?e:a,o[1]=l;for(var s=2;s<i;s++)o[s]=n[s];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},9299:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return o},metadata:function(){return l},toc:function(){return p},default:function(){return c}});var r=n(2122),a=n(9756),i=(n(7294),n(3905)),o={id:"api",title:"API Reference"},l={unversionedId:"api",id:"api",isDocsHomePage:!1,title:"API Reference",description:"CONTEXT",source:"@site/docs/api.md",sourceDirName:".",slug:"/api",permalink:"/docs/api",editUrl:"https://github.com/Urigo/graphql-modules/edit/master/website/docs/api.md",version:"current",frontMatter:{id:"api",title:"API Reference"},sidebar:"docs",previous:{title:"Migration from v0.X",permalink:"/docs/recipes/migration"}},p=[{value:"CONTEXT",id:"context",children:[]},{value:"MODULE_ID",id:"module_id",children:[]},{value:"Application",id:"application",children:[]},{value:"ApplicationConfig",id:"applicationconfig",children:[]},{value:"createApplication",id:"createapplication",children:[]},{value:"createModule",id:"createmodule",children:[]},{value:"ModuleConfig",id:"moduleconfig",children:[]}],s={toc:p};function c(e){var t=e.components,n=(0,a.Z)(e,["components"]);return(0,i.kt)("wrapper",(0,r.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"context"},"CONTEXT"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/Urigo/graphql-modules/blob/master/packages/graphql-modules/src/application/tokens.ts"},(0,i.kt)("em",{parentName:"a"},"source file"))),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"CONTEXT")," is an InjectionToken representing the provided ",(0,i.kt)("inlineCode",{parentName:"p"},"GraphQLModules.GlobalContext")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript"},"import { CONTEXT, Inject, Injectable } from 'graphql-modules';\n\n@Injectable()\nexport class Data {\n  constructor(@Inject(CONTEXT) private context: GraphQLModules.GlobalContext) {}\n}\n")),(0,i.kt)("h2",{id:"module_id"},"MODULE_ID"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/Urigo/graphql-modules/blob/master/packages/graphql-modules/src/module/tokens.ts"},(0,i.kt)("em",{parentName:"a"},"source file"))),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"MODULE_ID")," is an InjectionToken representing module's ID"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript"},"import { MODULE_ID, Inject, Injectable } from 'graphql-modules';\n\n@Injectable()\nexport class Data {\n  constructor(@Inject(MODULE_ID) moduleId: string) {\n    console.log(`Data used in ${moduleId} module`)\n  }\n}\n")),(0,i.kt)("h2",{id:"application"},"Application"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/Urigo/graphql-modules/blob/master/packages/graphql-modules/src/application/types.ts"},(0,i.kt)("em",{parentName:"a"},"source file"))),(0,i.kt)("p",null,"A return type of ",(0,i.kt)("inlineCode",{parentName:"p"},"createApplication")," function."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"typeDefs")," - A list of type definitions defined by modules."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"resolvers")," - An object with resolve functions defined by modules."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"schema")," - Ready to use GraphQLSchema object combined from modules."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"injector")," - The application (Singleton) injector."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"createOperationController")," - Take over control of GraphQL Operation"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"createSubscription")," - Creates a ",(0,i.kt)("inlineCode",{parentName:"li"},"subscribe")," function that runs the subscription phase of GraphQL.\nImportant when using GraphQL Subscriptions."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"createExecution")," - Creates a ",(0,i.kt)("inlineCode",{parentName:"li"},"execute")," function that runs the execution phase of GraphQL.\nImportant when using GraphQL Queries and Mutations."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"createSchemaForApollo")," - Experimental"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"createApolloExecutor")," - Experimental")),(0,i.kt)("h2",{id:"applicationconfig"},"ApplicationConfig"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/Urigo/graphql-modules/blob/master/packages/graphql-modules/src/application/types.ts"},(0,i.kt)("em",{parentName:"a"},"source file"))),(0,i.kt)("p",null,"Application's configuration object. Represents the first argument of ",(0,i.kt)("inlineCode",{parentName:"p"},"createApplication")," function."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"modules")," - A list of GraphQL Modules"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"providers")," - A list of Providers - read the ",(0,i.kt)("a",{parentName:"li",href:"./di/providers"},'"Providers and Tokens"')," chapter."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"middlewares")," - A map of middlewares - read the ",(0,i.kt)("a",{parentName:"li",href:"./advanced/middlewares"},'"Middlewares"')," chapter."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"schemaBuilder")," - Creates a GraphQLSchema object out of typeDefs and resolvers")),(0,i.kt)("h2",{id:"createapplication"},"createApplication"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/Urigo/graphql-modules/blob/master/packages/graphql-modules/src/application/application.ts"},(0,i.kt)("em",{parentName:"a"},"source file"))),(0,i.kt)("p",null,"Creates Application out of Modules. Accepts ",(0,i.kt)("inlineCode",{parentName:"p"},"ApplicationConfig"),"."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript"},"import { createApplication } from 'graphql-modules';\nimport { usersModule } from './users';\nimport { postsModule } from './posts';\nimport { commentsModule } from './comments';\n\nconst app = createApplication({\n  modules: [\n    usersModule,\n    postsModule,\n    commentsModule\n  ]\n})\n")),(0,i.kt)("h2",{id:"createmodule"},"createModule"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/Urigo/graphql-modules/blob/master/packages/graphql-modules/src/module/module.ts"},(0,i.kt)("em",{parentName:"a"},"source file"))),(0,i.kt)("p",null,"Creates a Module, an element used by Application. Accepts ",(0,i.kt)("inlineCode",{parentName:"p"},"ModuleConfig"),"."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript"},"import { createModule, gql } from 'graphql-modules';\n\nexport const usersModule = createModule({\n  id: 'users',\n  typeDefs: gql`\n    // GraphQL SDL\n  `,\n  resolvers: {\n    // ...\n  }\n});\n")),(0,i.kt)("h2",{id:"moduleconfig"},"ModuleConfig"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/Urigo/graphql-modules/blob/master/packages/graphql-modules/src/module/types.ts"},(0,i.kt)("em",{parentName:"a"},"source file"))),(0,i.kt)("p",null,"Module's configuration object. Represents the first argument of ",(0,i.kt)("inlineCode",{parentName:"p"},"createModule")," function."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"id")," - Unique identifier of a module"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"dirname")," - Pass ",(0,i.kt)("inlineCode",{parentName:"li"},"__dirname")," variable as a value to get better error messages."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"typeDefs")," - An object or a list of GraphQL type definitions (SDL)."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"resolvers")," - An object or a list of GraphQL resolve functions."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"middlewares")," - A map of middlewares - read the ",(0,i.kt)("a",{parentName:"li",href:"./advanced/middlewares"},'"Middlewares"')," chapter."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"providers")," - A list of Providers - read the ",(0,i.kt)("a",{parentName:"li",href:"./di/providers"},'"Providers and Tokens"')," chapter.")))}c.isMDXComponent=!0}}]);